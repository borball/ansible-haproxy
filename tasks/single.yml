---
- block:
  - name: ({{ instance.service }})Skip the HAProxy setup on node {{ ansible_hostname }}
    debug:
      msg: hosts is defined in lbs.yml but not match with {{ ansible_hostname }}
  when: instance.hosts is defined and ansible_hostname not in instance.hosts

- block:
  - name: ({{ instance.service }})Setup HAProxy instance {{ instance.service }} @ {{ ansible_hostname }}
    debug:
      msg: Configure HAProxy instance {{ instance.service }} @ {{ ansible_hostname }}

  - name: ({{ instance.service }})Ensure HAProxy is installed
    package:
      name: haproxy
      state: present

  - name: ({{ instance.service }})Stop and disable HAProxy
    systemd:
      name: haproxy
      state: stopped
      enabled: no

  - name: ({{ instance.service }})Create required folder for {{ instance.service }}
    file:
      path: "{{ dir }}"
      state: directory
    with_items:
      - "{{ haproxy.conf }}/{{ instance.service }}"
      - "{{ haproxy.sysconf }}"
      - "{{ haproxy.sock_location }}/{{ instance.service }}"
    loop_control:
      loop_var: dir

  - name: ({{ instance.service }})Prevision {{ haproxy.conf }}/{{ instance.service }}/haproxy.cfg
    template:
      src: "{{ instance.template | default('haproxy.cfg.j2') }}"
      dest: "{{ haproxy.conf }}/{{ instance.service }}/haproxy.cfg"

  - name: ({{ instance.service }})Prevision {{ haproxy.sysconf }}/{{ instance.service | lower }}
    copy:
      dest: "{{ haproxy.sysconf }}/{{ instance.service |lower }}"
      content: "{{ instance.option | default(haproxy.option) }}"

  - name: ({{ instance.service }})Provision systemd file for {{ instance.service }}
    template:
      dest: "/usr/lib/systemd/system/{{ instance.service }}.service"
      src: haproxy-systemd.service.j2

  - name: ({{ instance.service }})Enable the systemd and restart
    systemd:
      name: "{{ instance.service }}.service"
      daemon_reload: yes
      state: restarted
      enabled: yes
    ignore_errors: yes

  when: instance.hosts is not defined or ansible_hostname in instance.hosts